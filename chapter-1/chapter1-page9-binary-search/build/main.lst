ARM GAS  /tmp/ccZmP07Z.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB41:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "stm32l0xx_hal_uart.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** #include <stdint.h>
  28:Src/main.c    **** #include <stdio.h>
  29:Src/main.c    **** #include <string.h>
  30:Src/main.c    **** /* USER CODE END Includes */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccZmP07Z.s 			page 2


  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PD */
  39:Src/main.c    **** /* USER CODE END PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PM */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PM */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  47:Src/main.c    **** UART_HandleTypeDef huart2;
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  54:Src/main.c    **** void SystemClock_Config(void);
  55:Src/main.c    **** static void MX_GPIO_Init(void);
  56:Src/main.c    **** static void MX_USART2_UART_Init(void);
  57:Src/main.c    **** /* USER CODE BEGIN PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* USER CODE END PFP */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  62:Src/main.c    **** /* USER CODE BEGIN 0 */
  63:Src/main.c    **** int binary_search(int list[], int list_size, int item)
  64:Src/main.c    **** {
  65:Src/main.c    ****   int low = 0;
  66:Src/main.c    ****   int high = list_size - 1;
  67:Src/main.c    ****   int mid = 0;
  68:Src/main.c    ****   int guess = 0;
  69:Src/main.c    **** 
  70:Src/main.c    ****   while (low <= high)
  71:Src/main.c    ****     {
  72:Src/main.c    ****       mid = (low + high) / 2;
  73:Src/main.c    ****       guess = list[mid];
  74:Src/main.c    ****       if (guess == item)
  75:Src/main.c    **** 	return mid;
  76:Src/main.c    ****       if (guess > item)
  77:Src/main.c    **** 	high = mid - 1;
  78:Src/main.c    ****       else 
  79:Src/main.c    **** 	low = mid + 1;
  80:Src/main.c    ****     }
  81:Src/main.c    **** 
  82:Src/main.c    ****   return -1;
  83:Src/main.c    **** }
  84:Src/main.c    **** /* USER CODE END 0 */
  85:Src/main.c    **** 
  86:Src/main.c    **** /**
  87:Src/main.c    ****   * @brief  The application entry point.
  88:Src/main.c    ****   * @retval int
  89:Src/main.c    ****   */
  90:Src/main.c    **** int main(void)
ARM GAS  /tmp/ccZmP07Z.s 			page 3


  91:Src/main.c    **** {
  92:Src/main.c    ****   /* USER CODE BEGIN 1 */
  93:Src/main.c    ****   uint8_t buffer[64];
  94:Src/main.c    ****   int my_list[] = {1, 3, 5, 7, 9};
  95:Src/main.c    ****   int index = 0;
  96:Src/main.c    ****   
  97:Src/main.c    ****   /* USER CODE END 1 */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 102:Src/main.c    ****   HAL_Init();
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE BEGIN Init */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE END Init */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* Configure the system clock */
 109:Src/main.c    ****   SystemClock_Config();
 110:Src/main.c    **** 
 111:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE END SysInit */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Initialize all configured peripherals */
 116:Src/main.c    ****   MX_GPIO_Init();
 117:Src/main.c    ****   MX_USART2_UART_Init();
 118:Src/main.c    ****   /* USER CODE BEGIN 2 */
 119:Src/main.c    ****   index = binary_search(my_list, 5, 3);
 120:Src/main.c    ****   sprintf((char*)buffer, "Index of item 3 in list is: %i\n\r", index);
 121:Src/main.c    ****   HAL_UART_Transmit(&huart2, buffer, strlen((const char*)buffer), 1000);
 122:Src/main.c    **** 
 123:Src/main.c    **** 
 124:Src/main.c    ****   index = binary_search(my_list, 5, -1);
 125:Src/main.c    ****   sprintf((char*)buffer, "Index of item -1 in list is: %i\n\r", index);
 126:Src/main.c    ****   HAL_UART_Transmit(&huart2, buffer, strlen((const char*)buffer), 1000);
 127:Src/main.c    ****   /* USER CODE END 2 */
 128:Src/main.c    **** 
 129:Src/main.c    ****   /* Infinite loop */
 130:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 131:Src/main.c    ****   while (1)
 132:Src/main.c    ****   {
 133:Src/main.c    ****     /* USER CODE END WHILE */
 134:Src/main.c    **** 
 135:Src/main.c    ****     /* USER CODE BEGIN 3 */
 136:Src/main.c    ****   }
 137:Src/main.c    ****   /* USER CODE END 3 */
 138:Src/main.c    **** }
 139:Src/main.c    **** 
 140:Src/main.c    **** /**
 141:Src/main.c    ****   * @brief System Clock Configuration
 142:Src/main.c    ****   * @retval None
 143:Src/main.c    ****   */
 144:Src/main.c    **** void SystemClock_Config(void)
 145:Src/main.c    **** {
 146:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 147:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/ccZmP07Z.s 			page 4


 148:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 149:Src/main.c    **** 
 150:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 151:Src/main.c    ****   */
 152:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 153:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 154:Src/main.c    ****   */
 155:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 156:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 157:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 161:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 162:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 163:Src/main.c    ****   {
 164:Src/main.c    ****     Error_Handler();
 165:Src/main.c    ****   }
 166:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 167:Src/main.c    ****   */
 168:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 169:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 170:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 171:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 172:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 173:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 174:Src/main.c    **** 
 175:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 176:Src/main.c    ****   {
 177:Src/main.c    ****     Error_Handler();
 178:Src/main.c    ****   }
 179:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 180:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 181:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 182:Src/main.c    ****   {
 183:Src/main.c    ****     Error_Handler();
 184:Src/main.c    ****   }
 185:Src/main.c    **** }
 186:Src/main.c    **** 
 187:Src/main.c    **** /**
 188:Src/main.c    ****   * @brief USART2 Initialization Function
 189:Src/main.c    ****   * @param None
 190:Src/main.c    ****   * @retval None
 191:Src/main.c    ****   */
 192:Src/main.c    **** static void MX_USART2_UART_Init(void)
 193:Src/main.c    **** {
 194:Src/main.c    **** 
 195:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 196:Src/main.c    **** 
 197:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 198:Src/main.c    **** 
 199:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 200:Src/main.c    **** 
 201:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 202:Src/main.c    ****   huart2.Instance = USART2;
 203:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 204:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
ARM GAS  /tmp/ccZmP07Z.s 			page 5


 205:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 206:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 207:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 208:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 209:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 210:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 211:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 212:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 213:Src/main.c    ****   {
 214:Src/main.c    ****     Error_Handler();
 215:Src/main.c    ****   }
 216:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 217:Src/main.c    **** 
 218:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 219:Src/main.c    **** 
 220:Src/main.c    **** }
 221:Src/main.c    **** 
 222:Src/main.c    **** /**
 223:Src/main.c    ****   * @brief GPIO Initialization Function
 224:Src/main.c    ****   * @param None
 225:Src/main.c    ****   * @retval None
 226:Src/main.c    ****   */
 227:Src/main.c    **** static void MX_GPIO_Init(void)
 228:Src/main.c    **** {
  26              		.loc 1 228 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 229:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 229 3 view .LVU1
  40              		.loc 1 229 20 is_stmt 0 view .LVU2
  41 0004 1422     		movs	r2, #20
  42 0006 0021     		movs	r1, #0
  43 0008 03A8     		add	r0, sp, #12
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 230:Src/main.c    **** 
 231:Src/main.c    ****   /* GPIO Ports Clock Enable */
 232:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 232 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 232 3 view .LVU4
  49              		.loc 1 232 3 view .LVU5
  50 000e 154B     		ldr	r3, .L2
  51 0010 D96A     		ldr	r1, [r3, #44]
  52 0012 0422     		movs	r2, #4
  53 0014 1143     		orrs	r1, r2
  54 0016 D962     		str	r1, [r3, #44]
ARM GAS  /tmp/ccZmP07Z.s 			page 6


  55              		.loc 1 232 3 view .LVU6
  56 0018 D96A     		ldr	r1, [r3, #44]
  57 001a 0A40     		ands	r2, r1
  58 001c 0092     		str	r2, [sp]
  59              		.loc 1 232 3 view .LVU7
  60 001e 009A     		ldr	r2, [sp]
  61              	.LBE2:
  62              		.loc 1 232 3 view .LVU8
 233:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 233 3 view .LVU9
  64              	.LBB3:
  65              		.loc 1 233 3 view .LVU10
  66              		.loc 1 233 3 view .LVU11
  67 0020 DA6A     		ldr	r2, [r3, #44]
  68 0022 0124     		movs	r4, #1
  69 0024 2243     		orrs	r2, r4
  70 0026 DA62     		str	r2, [r3, #44]
  71              		.loc 1 233 3 view .LVU12
  72 0028 DA6A     		ldr	r2, [r3, #44]
  73 002a 2240     		ands	r2, r4
  74 002c 0192     		str	r2, [sp, #4]
  75              		.loc 1 233 3 view .LVU13
  76 002e 019A     		ldr	r2, [sp, #4]
  77              	.LBE3:
  78              		.loc 1 233 3 view .LVU14
 234:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  79              		.loc 1 234 3 view .LVU15
  80              	.LBB4:
  81              		.loc 1 234 3 view .LVU16
  82              		.loc 1 234 3 view .LVU17
  83 0030 D96A     		ldr	r1, [r3, #44]
  84 0032 0222     		movs	r2, #2
  85 0034 1143     		orrs	r1, r2
  86 0036 D962     		str	r1, [r3, #44]
  87              		.loc 1 234 3 view .LVU18
  88 0038 DB6A     		ldr	r3, [r3, #44]
  89 003a 1A40     		ands	r2, r3
  90 003c 0292     		str	r2, [sp, #8]
  91              		.loc 1 234 3 view .LVU19
  92 003e 029B     		ldr	r3, [sp, #8]
  93              	.LBE4:
  94              		.loc 1 234 3 view .LVU20
 235:Src/main.c    **** 
 236:Src/main.c    ****   /*Configure GPIO pin Output Level */
 237:Src/main.c    ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
  95              		.loc 1 237 3 view .LVU21
  96 0040 094D     		ldr	r5, .L2+4
  97 0042 0022     		movs	r2, #0
  98 0044 0821     		movs	r1, #8
  99 0046 2800     		movs	r0, r5
 100 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL1:
 238:Src/main.c    **** 
 239:Src/main.c    ****   /*Configure GPIO pin : LD3_Pin */
 240:Src/main.c    ****   GPIO_InitStruct.Pin = LD3_Pin;
 102              		.loc 1 240 3 view .LVU22
 103              		.loc 1 240 23 is_stmt 0 view .LVU23
ARM GAS  /tmp/ccZmP07Z.s 			page 7


 104 004c 0823     		movs	r3, #8
 105 004e 0393     		str	r3, [sp, #12]
 241:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 106              		.loc 1 241 3 is_stmt 1 view .LVU24
 107              		.loc 1 241 24 is_stmt 0 view .LVU25
 108 0050 0494     		str	r4, [sp, #16]
 242:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 109              		.loc 1 242 3 is_stmt 1 view .LVU26
 110              		.loc 1 242 24 is_stmt 0 view .LVU27
 111 0052 0023     		movs	r3, #0
 112 0054 0593     		str	r3, [sp, #20]
 243:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 113              		.loc 1 243 3 is_stmt 1 view .LVU28
 114              		.loc 1 243 25 is_stmt 0 view .LVU29
 115 0056 0693     		str	r3, [sp, #24]
 244:Src/main.c    ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 116              		.loc 1 244 3 is_stmt 1 view .LVU30
 117 0058 03A9     		add	r1, sp, #12
 118 005a 2800     		movs	r0, r5
 119 005c FFF7FEFF 		bl	HAL_GPIO_Init
 120              	.LVL2:
 245:Src/main.c    **** 
 246:Src/main.c    **** }
 121              		.loc 1 246 1 is_stmt 0 view .LVU31
 122 0060 09B0     		add	sp, sp, #36
 123              		@ sp needed
 124 0062 30BD     		pop	{r4, r5, pc}
 125              	.L3:
 126              		.align	2
 127              	.L2:
 128 0064 00100240 		.word	1073876992
 129 0068 00040050 		.word	1342178304
 130              		.cfi_endproc
 131              	.LFE41:
 133              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 134              		.align	1
 135              		.syntax unified
 136              		.code	16
 137              		.thumb_func
 138              		.fpu softvfp
 140              	MX_USART2_UART_Init:
 141              	.LFB40:
 193:Src/main.c    **** 
 142              		.loc 1 193 1 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 10B5     		push	{r4, lr}
 147              	.LCFI2:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
 202:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 151              		.loc 1 202 3 view .LVU33
 202:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 152              		.loc 1 202 19 is_stmt 0 view .LVU34
 153 0002 0948     		ldr	r0, .L5
ARM GAS  /tmp/ccZmP07Z.s 			page 8


 154 0004 094B     		ldr	r3, .L5+4
 155 0006 0360     		str	r3, [r0]
 203:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 156              		.loc 1 203 3 is_stmt 1 view .LVU35
 203:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 157              		.loc 1 203 24 is_stmt 0 view .LVU36
 158 0008 E123     		movs	r3, #225
 159 000a 5B02     		lsls	r3, r3, #9
 160 000c 4360     		str	r3, [r0, #4]
 204:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 161              		.loc 1 204 3 is_stmt 1 view .LVU37
 204:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 162              		.loc 1 204 26 is_stmt 0 view .LVU38
 163 000e 0023     		movs	r3, #0
 164 0010 8360     		str	r3, [r0, #8]
 205:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 165              		.loc 1 205 3 is_stmt 1 view .LVU39
 205:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 166              		.loc 1 205 24 is_stmt 0 view .LVU40
 167 0012 C360     		str	r3, [r0, #12]
 206:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 168              		.loc 1 206 3 is_stmt 1 view .LVU41
 206:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 169              		.loc 1 206 22 is_stmt 0 view .LVU42
 170 0014 0361     		str	r3, [r0, #16]
 207:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 171              		.loc 1 207 3 is_stmt 1 view .LVU43
 207:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 172              		.loc 1 207 20 is_stmt 0 view .LVU44
 173 0016 0C22     		movs	r2, #12
 174 0018 4261     		str	r2, [r0, #20]
 208:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 175              		.loc 1 208 3 is_stmt 1 view .LVU45
 208:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 176              		.loc 1 208 25 is_stmt 0 view .LVU46
 177 001a 8361     		str	r3, [r0, #24]
 209:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 178              		.loc 1 209 3 is_stmt 1 view .LVU47
 209:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 179              		.loc 1 209 28 is_stmt 0 view .LVU48
 180 001c C361     		str	r3, [r0, #28]
 210:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 181              		.loc 1 210 3 is_stmt 1 view .LVU49
 210:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 182              		.loc 1 210 30 is_stmt 0 view .LVU50
 183 001e 0362     		str	r3, [r0, #32]
 211:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 184              		.loc 1 211 3 is_stmt 1 view .LVU51
 211:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 185              		.loc 1 211 38 is_stmt 0 view .LVU52
 186 0020 4362     		str	r3, [r0, #36]
 212:Src/main.c    ****   {
 187              		.loc 1 212 3 is_stmt 1 view .LVU53
 212:Src/main.c    ****   {
 188              		.loc 1 212 7 is_stmt 0 view .LVU54
 189 0022 FFF7FEFF 		bl	HAL_UART_Init
 190              	.LVL3:
ARM GAS  /tmp/ccZmP07Z.s 			page 9


 220:Src/main.c    **** 
 191              		.loc 1 220 1 view .LVU55
 192              		@ sp needed
 193 0026 10BD     		pop	{r4, pc}
 194              	.L6:
 195              		.align	2
 196              	.L5:
 197 0028 00000000 		.word	huart2
 198 002c 00440040 		.word	1073759232
 199              		.cfi_endproc
 200              	.LFE40:
 202              		.section	.text.binary_search,"ax",%progbits
 203              		.align	1
 204              		.global	binary_search
 205              		.syntax unified
 206              		.code	16
 207              		.thumb_func
 208              		.fpu softvfp
 210              	binary_search:
 211              	.LVL4:
 212              	.LFB37:
  64:Src/main.c    ****   int low = 0;
 213              		.loc 1 64 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
  64:Src/main.c    ****   int low = 0;
 217              		.loc 1 64 1 is_stmt 0 view .LVU57
 218 0000 30B5     		push	{r4, r5, lr}
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 12
 221              		.cfi_offset 4, -12
 222              		.cfi_offset 5, -8
 223              		.cfi_offset 14, -4
 224 0002 0500     		movs	r5, r0
  65:Src/main.c    ****   int high = list_size - 1;
 225              		.loc 1 65 3 is_stmt 1 view .LVU58
 226              	.LVL5:
  66:Src/main.c    ****   int mid = 0;
 227              		.loc 1 66 3 view .LVU59
  66:Src/main.c    ****   int mid = 0;
 228              		.loc 1 66 7 is_stmt 0 view .LVU60
 229 0004 0139     		subs	r1, r1, #1
 230              	.LVL6:
  67:Src/main.c    ****   int guess = 0;
 231              		.loc 1 67 3 is_stmt 1 view .LVU61
  68:Src/main.c    **** 
 232              		.loc 1 68 3 view .LVU62
  70:Src/main.c    ****     {
 233              		.loc 1 70 3 view .LVU63
  65:Src/main.c    ****   int high = list_size - 1;
 234              		.loc 1 65 7 is_stmt 0 view .LVU64
 235 0006 0024     		movs	r4, #0
  70:Src/main.c    ****     {
 236              		.loc 1 70 9 view .LVU65
 237 0008 00E0     		b	.L8
 238              	.LVL7:
ARM GAS  /tmp/ccZmP07Z.s 			page 10


 239              	.L10:
  79:Src/main.c    ****     }
 240              		.loc 1 79 2 is_stmt 1 view .LVU66
  79:Src/main.c    ****     }
 241              		.loc 1 79 6 is_stmt 0 view .LVU67
 242 000a 441C     		adds	r4, r0, #1
 243              	.LVL8:
 244              	.L8:
  70:Src/main.c    ****     {
 245              		.loc 1 70 9 is_stmt 1 view .LVU68
 246 000c 8C42     		cmp	r4, r1
 247 000e 0ADC     		bgt	.L13
  72:Src/main.c    ****       guess = list[mid];
 248              		.loc 1 72 7 view .LVU69
  72:Src/main.c    ****       guess = list[mid];
 249              		.loc 1 72 18 is_stmt 0 view .LVU70
 250 0010 6318     		adds	r3, r4, r1
  72:Src/main.c    ****       guess = list[mid];
 251              		.loc 1 72 11 view .LVU71
 252 0012 D80F     		lsrs	r0, r3, #31
 253 0014 C018     		adds	r0, r0, r3
 254 0016 4010     		asrs	r0, r0, #1
 255              	.LVL9:
  73:Src/main.c    ****       if (guess == item)
 256              		.loc 1 73 7 is_stmt 1 view .LVU72
  73:Src/main.c    ****       if (guess == item)
 257              		.loc 1 73 19 is_stmt 0 view .LVU73
 258 0018 8300     		lsls	r3, r0, #2
  73:Src/main.c    ****       if (guess == item)
 259              		.loc 1 73 13 view .LVU74
 260 001a EB58     		ldr	r3, [r5, r3]
 261              	.LVL10:
  74:Src/main.c    **** 	return mid;
 262              		.loc 1 74 7 is_stmt 1 view .LVU75
  74:Src/main.c    **** 	return mid;
 263              		.loc 1 74 10 is_stmt 0 view .LVU76
 264 001c 9342     		cmp	r3, r2
 265 001e 04D0     		beq	.L7
  76:Src/main.c    **** 	high = mid - 1;
 266              		.loc 1 76 7 is_stmt 1 view .LVU77
  76:Src/main.c    **** 	high = mid - 1;
 267              		.loc 1 76 10 is_stmt 0 view .LVU78
 268 0020 F3DD     		ble	.L10
  77:Src/main.c    ****       else 
 269              		.loc 1 77 2 is_stmt 1 view .LVU79
  77:Src/main.c    ****       else 
 270              		.loc 1 77 7 is_stmt 0 view .LVU80
 271 0022 411E     		subs	r1, r0, #1
 272              	.LVL11:
  77:Src/main.c    ****       else 
 273              		.loc 1 77 7 view .LVU81
 274 0024 F2E7     		b	.L8
 275              	.LVL12:
 276              	.L13:
  82:Src/main.c    **** }
 277              		.loc 1 82 10 view .LVU82
 278 0026 0120     		movs	r0, #1
ARM GAS  /tmp/ccZmP07Z.s 			page 11


 279 0028 4042     		rsbs	r0, r0, #0
 280              	.L7:
  83:Src/main.c    **** /* USER CODE END 0 */
 281              		.loc 1 83 1 view .LVU83
 282              		@ sp needed
 283              	.LVL13:
 284              	.LVL14:
  83:Src/main.c    **** /* USER CODE END 0 */
 285              		.loc 1 83 1 view .LVU84
 286 002a 30BD     		pop	{r4, r5, pc}
 287              		.cfi_endproc
 288              	.LFE37:
 290              		.section	.text.SystemClock_Config,"ax",%progbits
 291              		.align	1
 292              		.global	SystemClock_Config
 293              		.syntax unified
 294              		.code	16
 295              		.thumb_func
 296              		.fpu softvfp
 298              	SystemClock_Config:
 299              	.LFB39:
 145:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 300              		.loc 1 145 1 is_stmt 1 view -0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 96
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304 0000 30B5     		push	{r4, r5, lr}
 305              	.LCFI4:
 306              		.cfi_def_cfa_offset 12
 307              		.cfi_offset 4, -12
 308              		.cfi_offset 5, -8
 309              		.cfi_offset 14, -4
 310 0002 99B0     		sub	sp, sp, #100
 311              	.LCFI5:
 312              		.cfi_def_cfa_offset 112
 146:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 313              		.loc 1 146 3 view .LVU86
 146:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 314              		.loc 1 146 22 is_stmt 0 view .LVU87
 315 0004 3422     		movs	r2, #52
 316 0006 0021     		movs	r1, #0
 317 0008 0BA8     		add	r0, sp, #44
 318 000a FFF7FEFF 		bl	memset
 319              	.LVL15:
 147:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 320              		.loc 1 147 3 is_stmt 1 view .LVU88
 147:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 321              		.loc 1 147 22 is_stmt 0 view .LVU89
 322 000e 1422     		movs	r2, #20
 323 0010 0021     		movs	r1, #0
 324 0012 06A8     		add	r0, sp, #24
 325 0014 FFF7FEFF 		bl	memset
 326              	.LVL16:
 148:Src/main.c    **** 
 327              		.loc 1 148 3 is_stmt 1 view .LVU90
 148:Src/main.c    **** 
 328              		.loc 1 148 28 is_stmt 0 view .LVU91
ARM GAS  /tmp/ccZmP07Z.s 			page 12


 329 0018 1822     		movs	r2, #24
 330 001a 0021     		movs	r1, #0
 331 001c 6846     		mov	r0, sp
 332 001e FFF7FEFF 		bl	memset
 333              	.LVL17:
 152:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 334              		.loc 1 152 3 is_stmt 1 view .LVU92
 335 0022 1649     		ldr	r1, .L15
 336 0024 0B68     		ldr	r3, [r1]
 337 0026 164A     		ldr	r2, .L15+4
 338 0028 1A40     		ands	r2, r3
 339 002a 8023     		movs	r3, #128
 340 002c 1B01     		lsls	r3, r3, #4
 341 002e 1343     		orrs	r3, r2
 342 0030 0B60     		str	r3, [r1]
 155:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 343              		.loc 1 155 3 view .LVU93
 155:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 344              		.loc 1 155 36 is_stmt 0 view .LVU94
 345 0032 0225     		movs	r5, #2
 346 0034 0B95     		str	r5, [sp, #44]
 156:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 347              		.loc 1 156 3 is_stmt 1 view .LVU95
 156:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 348              		.loc 1 156 30 is_stmt 0 view .LVU96
 349 0036 0123     		movs	r3, #1
 350 0038 0E93     		str	r3, [sp, #56]
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 351              		.loc 1 157 3 is_stmt 1 view .LVU97
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 352              		.loc 1 157 41 is_stmt 0 view .LVU98
 353 003a 0F33     		adds	r3, r3, #15
 354 003c 0F93     		str	r3, [sp, #60]
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 355              		.loc 1 158 3 is_stmt 1 view .LVU99
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 356              		.loc 1 158 34 is_stmt 0 view .LVU100
 357 003e 1495     		str	r5, [sp, #80]
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 358              		.loc 1 159 3 is_stmt 1 view .LVU101
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 359              		.loc 1 159 35 is_stmt 0 view .LVU102
 360 0040 0024     		movs	r4, #0
 361 0042 1594     		str	r4, [sp, #84]
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 362              		.loc 1 160 3 is_stmt 1 view .LVU103
 160:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 363              		.loc 1 160 32 is_stmt 0 view .LVU104
 364 0044 8023     		movs	r3, #128
 365 0046 DB02     		lsls	r3, r3, #11
 366 0048 1693     		str	r3, [sp, #88]
 161:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 367              		.loc 1 161 3 is_stmt 1 view .LVU105
 161:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 368              		.loc 1 161 32 is_stmt 0 view .LVU106
 369 004a 8023     		movs	r3, #128
 370 004c DB03     		lsls	r3, r3, #15
ARM GAS  /tmp/ccZmP07Z.s 			page 13


 371 004e 1793     		str	r3, [sp, #92]
 162:Src/main.c    ****   {
 372              		.loc 1 162 3 is_stmt 1 view .LVU107
 162:Src/main.c    ****   {
 373              		.loc 1 162 7 is_stmt 0 view .LVU108
 374 0050 0BA8     		add	r0, sp, #44
 375 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 376              	.LVL18:
 168:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 377              		.loc 1 168 3 is_stmt 1 view .LVU109
 168:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 378              		.loc 1 168 31 is_stmt 0 view .LVU110
 379 0056 0F23     		movs	r3, #15
 380 0058 0693     		str	r3, [sp, #24]
 170:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 381              		.loc 1 170 3 is_stmt 1 view .LVU111
 170:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 382              		.loc 1 170 34 is_stmt 0 view .LVU112
 383 005a 0C3B     		subs	r3, r3, #12
 384 005c 0793     		str	r3, [sp, #28]
 171:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 385              		.loc 1 171 3 is_stmt 1 view .LVU113
 171:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 386              		.loc 1 171 35 is_stmt 0 view .LVU114
 387 005e 0894     		str	r4, [sp, #32]
 172:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 388              		.loc 1 172 3 is_stmt 1 view .LVU115
 172:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 389              		.loc 1 172 36 is_stmt 0 view .LVU116
 390 0060 0994     		str	r4, [sp, #36]
 173:Src/main.c    **** 
 391              		.loc 1 173 3 is_stmt 1 view .LVU117
 173:Src/main.c    **** 
 392              		.loc 1 173 36 is_stmt 0 view .LVU118
 393 0062 0A94     		str	r4, [sp, #40]
 175:Src/main.c    ****   {
 394              		.loc 1 175 3 is_stmt 1 view .LVU119
 175:Src/main.c    ****   {
 395              		.loc 1 175 7 is_stmt 0 view .LVU120
 396 0064 0121     		movs	r1, #1
 397 0066 06A8     		add	r0, sp, #24
 398 0068 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 399              	.LVL19:
 179:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 400              		.loc 1 179 3 is_stmt 1 view .LVU121
 179:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 401              		.loc 1 179 38 is_stmt 0 view .LVU122
 402 006c 0095     		str	r5, [sp]
 180:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 403              		.loc 1 180 3 is_stmt 1 view .LVU123
 180:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 404              		.loc 1 180 38 is_stmt 0 view .LVU124
 405 006e 0294     		str	r4, [sp, #8]
 181:Src/main.c    ****   {
 406              		.loc 1 181 3 is_stmt 1 view .LVU125
 181:Src/main.c    ****   {
 407              		.loc 1 181 7 is_stmt 0 view .LVU126
ARM GAS  /tmp/ccZmP07Z.s 			page 14


 408 0070 6846     		mov	r0, sp
 409 0072 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 410              	.LVL20:
 185:Src/main.c    **** 
 411              		.loc 1 185 1 view .LVU127
 412 0076 19B0     		add	sp, sp, #100
 413              		@ sp needed
 414 0078 30BD     		pop	{r4, r5, pc}
 415              	.L16:
 416 007a C046     		.align	2
 417              	.L15:
 418 007c 00700040 		.word	1073770496
 419 0080 FFE7FFFF 		.word	-6145
 420              		.cfi_endproc
 421              	.LFE39:
 423              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 424              		.align	2
 425              	.LC3:
 426 0000 496E6465 		.ascii	"Index of item 3 in list is: %i\012\015\000"
 426      78206F66 
 426      20697465 
 426      6D203320 
 426      696E206C 
 427 0021 000000   		.align	2
 428              	.LC6:
 429 0024 496E6465 		.ascii	"Index of item -1 in list is: %i\012\015\000"
 429      78206F66 
 429      20697465 
 429      6D202D31 
 429      20696E20 
 430              		.section	.text.main,"ax",%progbits
 431              		.align	1
 432              		.global	main
 433              		.syntax unified
 434              		.code	16
 435              		.thumb_func
 436              		.fpu softvfp
 438              	main:
 439              	.LFB38:
  91:Src/main.c    ****   /* USER CODE BEGIN 1 */
 440              		.loc 1 91 1 is_stmt 1 view -0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 88
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444 0000 70B5     		push	{r4, r5, r6, lr}
 445              	.LCFI6:
 446              		.cfi_def_cfa_offset 16
 447              		.cfi_offset 4, -16
 448              		.cfi_offset 5, -12
 449              		.cfi_offset 6, -8
 450              		.cfi_offset 14, -4
 451 0002 96B0     		sub	sp, sp, #88
 452              	.LCFI7:
 453              		.cfi_def_cfa_offset 104
  93:Src/main.c    ****   int my_list[] = {1, 3, 5, 7, 9};
 454              		.loc 1 93 3 view .LVU129
  94:Src/main.c    ****   int index = 0;
ARM GAS  /tmp/ccZmP07Z.s 			page 15


 455              		.loc 1 94 3 view .LVU130
  94:Src/main.c    ****   int index = 0;
 456              		.loc 1 94 7 is_stmt 0 view .LVU131
 457 0004 01AC     		add	r4, sp, #4
 458 0006 1C4B     		ldr	r3, .L19
 459 0008 2200     		movs	r2, r4
 460 000a 23CB     		ldmia	r3!, {r0, r1, r5}
 461 000c 23C2     		stmia	r2!, {r0, r1, r5}
 462 000e 03CB     		ldmia	r3!, {r0, r1}
 463 0010 03C2     		stmia	r2!, {r0, r1}
  95:Src/main.c    ****   
 464              		.loc 1 95 3 is_stmt 1 view .LVU132
 465              	.LVL21:
 102:Src/main.c    **** 
 466              		.loc 1 102 3 view .LVU133
 467 0012 FFF7FEFF 		bl	HAL_Init
 468              	.LVL22:
 109:Src/main.c    **** 
 469              		.loc 1 109 3 view .LVU134
 470 0016 FFF7FEFF 		bl	SystemClock_Config
 471              	.LVL23:
 116:Src/main.c    ****   MX_USART2_UART_Init();
 472              		.loc 1 116 3 view .LVU135
 473 001a FFF7FEFF 		bl	MX_GPIO_Init
 474              	.LVL24:
 117:Src/main.c    ****   /* USER CODE BEGIN 2 */
 475              		.loc 1 117 3 view .LVU136
 476 001e FFF7FEFF 		bl	MX_USART2_UART_Init
 477              	.LVL25:
 119:Src/main.c    ****   sprintf((char*)buffer, "Index of item 3 in list is: %i\n\r", index);
 478              		.loc 1 119 3 view .LVU137
 119:Src/main.c    ****   sprintf((char*)buffer, "Index of item 3 in list is: %i\n\r", index);
 479              		.loc 1 119 11 is_stmt 0 view .LVU138
 480 0022 0322     		movs	r2, #3
 481 0024 0521     		movs	r1, #5
 482 0026 2000     		movs	r0, r4
 483 0028 FFF7FEFF 		bl	binary_search
 484              	.LVL26:
 485 002c 0200     		movs	r2, r0
 486              	.LVL27:
 120:Src/main.c    ****   HAL_UART_Transmit(&huart2, buffer, strlen((const char*)buffer), 1000);
 487              		.loc 1 120 3 is_stmt 1 view .LVU139
 488 002e 1349     		ldr	r1, .L19+4
 489 0030 06A8     		add	r0, sp, #24
 490              	.LVL28:
 120:Src/main.c    ****   HAL_UART_Transmit(&huart2, buffer, strlen((const char*)buffer), 1000);
 491              		.loc 1 120 3 is_stmt 0 view .LVU140
 492 0032 FFF7FEFF 		bl	sprintf
 493              	.LVL29:
 121:Src/main.c    **** 
 494              		.loc 1 121 3 is_stmt 1 view .LVU141
 121:Src/main.c    **** 
 495              		.loc 1 121 38 is_stmt 0 view .LVU142
 496 0036 06A8     		add	r0, sp, #24
 497 0038 FFF7FEFF 		bl	strlen
 498              	.LVL30:
 121:Src/main.c    **** 
ARM GAS  /tmp/ccZmP07Z.s 			page 16


 499              		.loc 1 121 3 view .LVU143
 500 003c FA25     		movs	r5, #250
 501 003e AD00     		lsls	r5, r5, #2
 502 0040 82B2     		uxth	r2, r0
 503 0042 0F4E     		ldr	r6, .L19+8
 504 0044 2B00     		movs	r3, r5
 505 0046 06A9     		add	r1, sp, #24
 506 0048 3000     		movs	r0, r6
 507 004a FFF7FEFF 		bl	HAL_UART_Transmit
 508              	.LVL31:
 124:Src/main.c    ****   sprintf((char*)buffer, "Index of item -1 in list is: %i\n\r", index);
 509              		.loc 1 124 3 is_stmt 1 view .LVU144
 124:Src/main.c    ****   sprintf((char*)buffer, "Index of item -1 in list is: %i\n\r", index);
 510              		.loc 1 124 11 is_stmt 0 view .LVU145
 511 004e 0122     		movs	r2, #1
 512 0050 5242     		rsbs	r2, r2, #0
 513 0052 0521     		movs	r1, #5
 514 0054 2000     		movs	r0, r4
 515 0056 FFF7FEFF 		bl	binary_search
 516              	.LVL32:
 517 005a 0200     		movs	r2, r0
 518              	.LVL33:
 125:Src/main.c    ****   HAL_UART_Transmit(&huart2, buffer, strlen((const char*)buffer), 1000);
 519              		.loc 1 125 3 is_stmt 1 view .LVU146
 520 005c 0949     		ldr	r1, .L19+12
 521 005e 06A8     		add	r0, sp, #24
 522              	.LVL34:
 125:Src/main.c    ****   HAL_UART_Transmit(&huart2, buffer, strlen((const char*)buffer), 1000);
 523              		.loc 1 125 3 is_stmt 0 view .LVU147
 524 0060 FFF7FEFF 		bl	sprintf
 525              	.LVL35:
 126:Src/main.c    ****   /* USER CODE END 2 */
 526              		.loc 1 126 3 is_stmt 1 view .LVU148
 126:Src/main.c    ****   /* USER CODE END 2 */
 527              		.loc 1 126 38 is_stmt 0 view .LVU149
 528 0064 06A8     		add	r0, sp, #24
 529 0066 FFF7FEFF 		bl	strlen
 530              	.LVL36:
 126:Src/main.c    ****   /* USER CODE END 2 */
 531              		.loc 1 126 3 view .LVU150
 532 006a 82B2     		uxth	r2, r0
 533 006c 2B00     		movs	r3, r5
 534 006e 06A9     		add	r1, sp, #24
 535 0070 3000     		movs	r0, r6
 536 0072 FFF7FEFF 		bl	HAL_UART_Transmit
 537              	.LVL37:
 538              	.L18:
 131:Src/main.c    ****   {
 539              		.loc 1 131 3 is_stmt 1 discriminator 1 view .LVU151
 136:Src/main.c    ****   /* USER CODE END 3 */
 540              		.loc 1 136 3 discriminator 1 view .LVU152
 131:Src/main.c    ****   {
 541              		.loc 1 131 9 discriminator 1 view .LVU153
 542 0076 FEE7     		b	.L18
 543              	.L20:
 544              		.align	2
 545              	.L19:
ARM GAS  /tmp/ccZmP07Z.s 			page 17


 546 0078 00000000 		.word	.LANCHOR0
 547 007c 00000000 		.word	.LC3
 548 0080 00000000 		.word	huart2
 549 0084 24000000 		.word	.LC6
 550              		.cfi_endproc
 551              	.LFE38:
 553              		.section	.text.Error_Handler,"ax",%progbits
 554              		.align	1
 555              		.global	Error_Handler
 556              		.syntax unified
 557              		.code	16
 558              		.thumb_func
 559              		.fpu softvfp
 561              	Error_Handler:
 562              	.LFB42:
 247:Src/main.c    **** 
 248:Src/main.c    **** /* USER CODE BEGIN 4 */
 249:Src/main.c    **** 
 250:Src/main.c    **** /* USER CODE END 4 */
 251:Src/main.c    **** 
 252:Src/main.c    **** /**
 253:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 254:Src/main.c    ****   * @retval None
 255:Src/main.c    ****   */
 256:Src/main.c    **** void Error_Handler(void)
 257:Src/main.c    **** {
 563              		.loc 1 257 1 view -0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 258:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 259:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 260:Src/main.c    **** 
 261:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 262:Src/main.c    **** }
 568              		.loc 1 262 1 view .LVU155
 569              		@ sp needed
 570 0000 7047     		bx	lr
 571              		.cfi_endproc
 572              	.LFE42:
 574              		.global	huart2
 575              		.section	.rodata
 576              		.align	2
 577              		.set	.LANCHOR0,. + 0
 578              	.LC0:
 579 0000 01000000 		.word	1
 580 0004 03000000 		.word	3
 581 0008 05000000 		.word	5
 582 000c 07000000 		.word	7
 583 0010 09000000 		.word	9
 584              		.section	.bss.huart2,"aw",%nobits
 585              		.align	2
 588              	huart2:
 589 0000 00000000 		.space	128
 589      00000000 
 589      00000000 
ARM GAS  /tmp/ccZmP07Z.s 			page 18


 589      00000000 
 589      00000000 
 590              		.text
 591              	.Letext0:
 592              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 593              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 594              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l031xx.h"
 595              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 596              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 597              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 598              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 599              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 600              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 601              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 602              		.file 12 "/usr/arm-none-eabi/include/stdio.h"
 603              		.file 13 "/usr/arm-none-eabi/include/string.h"
 604              		.file 14 "<built-in>"
ARM GAS  /tmp/ccZmP07Z.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccZmP07Z.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccZmP07Z.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccZmP07Z.s:128    .text.MX_GPIO_Init:0000000000000064 $d
     /tmp/ccZmP07Z.s:134    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccZmP07Z.s:140    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccZmP07Z.s:197    .text.MX_USART2_UART_Init:0000000000000028 $d
     /tmp/ccZmP07Z.s:588    .bss.huart2:0000000000000000 huart2
     /tmp/ccZmP07Z.s:203    .text.binary_search:0000000000000000 $t
     /tmp/ccZmP07Z.s:210    .text.binary_search:0000000000000000 binary_search
     /tmp/ccZmP07Z.s:291    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccZmP07Z.s:298    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccZmP07Z.s:418    .text.SystemClock_Config:000000000000007c $d
     /tmp/ccZmP07Z.s:424    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccZmP07Z.s:431    .text.main:0000000000000000 $t
     /tmp/ccZmP07Z.s:438    .text.main:0000000000000000 main
     /tmp/ccZmP07Z.s:546    .text.main:0000000000000078 $d
     /tmp/ccZmP07Z.s:554    .text.Error_Handler:0000000000000000 $t
     /tmp/ccZmP07Z.s:561    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccZmP07Z.s:576    .rodata:0000000000000000 $d
     /tmp/ccZmP07Z.s:585    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
sprintf
strlen
HAL_UART_Transmit
