ARM GAS  /tmp/ccd1KPBn.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB41:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** 
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** #include <stdint.h>
  27:Src/main.c    **** #include <stdio.h>
  28:Src/main.c    **** #include <string.h>
  29:Src/main.c    **** /* USER CODE END Includes */
  30:Src/main.c    **** 
  31:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  32:Src/main.c    **** /* USER CODE BEGIN PTD */
  33:Src/main.c    **** 
ARM GAS  /tmp/ccd1KPBn.s 			page 2


  34:Src/main.c    **** /* USER CODE END PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  37:Src/main.c    **** /* USER CODE BEGIN PD */
  38:Src/main.c    **** /* USER CODE END PD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  46:Src/main.c    **** UART_HandleTypeDef huart2;
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN PV */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  53:Src/main.c    **** void SystemClock_Config(void);
  54:Src/main.c    **** static void MX_GPIO_Init(void);
  55:Src/main.c    **** static void MX_USART2_UART_Init(void);
  56:Src/main.c    **** /* USER CODE BEGIN PFP */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN 0 */
  62:Src/main.c    **** int sum(int list[], int list_size)
  63:Src/main.c    **** {
  64:Src/main.c    ****   if (list_size == 0)
  65:Src/main.c    ****     {
  66:Src/main.c    ****       return 0;
  67:Src/main.c    ****     }
  68:Src/main.c    **** 
  69:Src/main.c    ****   if (list_size == 1)
  70:Src/main.c    ****     {
  71:Src/main.c    ****       return list[0];
  72:Src/main.c    ****     }
  73:Src/main.c    **** 
  74:Src/main.c    ****   return (list[0] + sum(&list[1], (list_size-1)));
  75:Src/main.c    **** }
  76:Src/main.c    **** /* USER CODE END 0 */
  77:Src/main.c    **** 
  78:Src/main.c    **** /**
  79:Src/main.c    ****   * @brief  The application entry point.
  80:Src/main.c    ****   * @retval int
  81:Src/main.c    ****   */
  82:Src/main.c    **** int main(void)
  83:Src/main.c    **** {
  84:Src/main.c    ****   /* USER CODE BEGIN 1 */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END 1 */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  /tmp/ccd1KPBn.s 			page 3


  91:Src/main.c    ****   HAL_Init();
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE BEGIN Init */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE END Init */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Configure the system clock */
  98:Src/main.c    ****   SystemClock_Config();
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE END SysInit */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* Initialize all configured peripherals */
 105:Src/main.c    ****   MX_GPIO_Init();
 106:Src/main.c    ****   MX_USART2_UART_Init();
 107:Src/main.c    ****   /* USER CODE BEGIN 2 */
 108:Src/main.c    ****   uint8_t buffer[64];
 109:Src/main.c    ****   int list[1000];
 110:Src/main.c    ****   for (int i = 0; i < 1000; i++)
 111:Src/main.c    ****     {
 112:Src/main.c    ****       list[i] = i;
 113:Src/main.c    ****     }
 114:Src/main.c    ****   sprintf((char*)buffer, "Sum of list is %i\n\r", sum(list, 1000));
 115:Src/main.c    ****   HAL_UART_Transmit(&huart2, buffer, strlen((const char*)buffer), 1000);
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* USER CODE END 2 */
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* Infinite loop */
 120:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 121:Src/main.c    ****   while (1)
 122:Src/main.c    ****   {
 123:Src/main.c    ****     /* USER CODE END WHILE */
 124:Src/main.c    **** 
 125:Src/main.c    ****     /* USER CODE BEGIN 3 */
 126:Src/main.c    ****   }
 127:Src/main.c    ****   /* USER CODE END 3 */
 128:Src/main.c    **** }
 129:Src/main.c    **** 
 130:Src/main.c    **** /**
 131:Src/main.c    ****   * @brief System Clock Configuration
 132:Src/main.c    ****   * @retval None
 133:Src/main.c    ****   */
 134:Src/main.c    **** void SystemClock_Config(void)
 135:Src/main.c    **** {
 136:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 137:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 138:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 139:Src/main.c    **** 
 140:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 141:Src/main.c    ****   */
 142:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 143:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 144:Src/main.c    ****   */
 145:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 146:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 147:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  /tmp/ccd1KPBn.s 			page 4


 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 151:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 152:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 153:Src/main.c    ****   {
 154:Src/main.c    ****     Error_Handler();
 155:Src/main.c    ****   }
 156:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 157:Src/main.c    ****   */
 158:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 159:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 160:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 161:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 162:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 163:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 164:Src/main.c    **** 
 165:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 166:Src/main.c    ****   {
 167:Src/main.c    ****     Error_Handler();
 168:Src/main.c    ****   }
 169:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 170:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 171:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 172:Src/main.c    ****   {
 173:Src/main.c    ****     Error_Handler();
 174:Src/main.c    ****   }
 175:Src/main.c    **** }
 176:Src/main.c    **** 
 177:Src/main.c    **** /**
 178:Src/main.c    ****   * @brief USART2 Initialization Function
 179:Src/main.c    ****   * @param None
 180:Src/main.c    ****   * @retval None
 181:Src/main.c    ****   */
 182:Src/main.c    **** static void MX_USART2_UART_Init(void)
 183:Src/main.c    **** {
 184:Src/main.c    **** 
 185:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 186:Src/main.c    **** 
 187:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 188:Src/main.c    **** 
 189:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 190:Src/main.c    **** 
 191:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 192:Src/main.c    ****   huart2.Instance = USART2;
 193:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 194:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 195:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 196:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 197:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 198:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 199:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 200:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 201:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 202:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 203:Src/main.c    ****   {
 204:Src/main.c    ****     Error_Handler();
ARM GAS  /tmp/ccd1KPBn.s 			page 5


 205:Src/main.c    ****   }
 206:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 207:Src/main.c    **** 
 208:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 209:Src/main.c    **** 
 210:Src/main.c    **** }
 211:Src/main.c    **** 
 212:Src/main.c    **** /**
 213:Src/main.c    ****   * @brief GPIO Initialization Function
 214:Src/main.c    ****   * @param None
 215:Src/main.c    ****   * @retval None
 216:Src/main.c    ****   */
 217:Src/main.c    **** static void MX_GPIO_Init(void)
 218:Src/main.c    **** {
  26              		.loc 1 218 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 219:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 219 3 view .LVU1
  40              		.loc 1 219 20 is_stmt 0 view .LVU2
  41 0004 1422     		movs	r2, #20
  42 0006 0021     		movs	r1, #0
  43 0008 03A8     		add	r0, sp, #12
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 220:Src/main.c    **** 
 221:Src/main.c    ****   /* GPIO Ports Clock Enable */
 222:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 222 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 222 3 view .LVU4
  49              		.loc 1 222 3 view .LVU5
  50 000e 154B     		ldr	r3, .L2
  51 0010 D96A     		ldr	r1, [r3, #44]
  52 0012 0422     		movs	r2, #4
  53 0014 1143     		orrs	r1, r2
  54 0016 D962     		str	r1, [r3, #44]
  55              		.loc 1 222 3 view .LVU6
  56 0018 D96A     		ldr	r1, [r3, #44]
  57 001a 0A40     		ands	r2, r1
  58 001c 0092     		str	r2, [sp]
  59              		.loc 1 222 3 view .LVU7
  60 001e 009A     		ldr	r2, [sp]
  61              	.LBE2:
  62              		.loc 1 222 3 view .LVU8
 223:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 223 3 view .LVU9
ARM GAS  /tmp/ccd1KPBn.s 			page 6


  64              	.LBB3:
  65              		.loc 1 223 3 view .LVU10
  66              		.loc 1 223 3 view .LVU11
  67 0020 DA6A     		ldr	r2, [r3, #44]
  68 0022 0124     		movs	r4, #1
  69 0024 2243     		orrs	r2, r4
  70 0026 DA62     		str	r2, [r3, #44]
  71              		.loc 1 223 3 view .LVU12
  72 0028 DA6A     		ldr	r2, [r3, #44]
  73 002a 2240     		ands	r2, r4
  74 002c 0192     		str	r2, [sp, #4]
  75              		.loc 1 223 3 view .LVU13
  76 002e 019A     		ldr	r2, [sp, #4]
  77              	.LBE3:
  78              		.loc 1 223 3 view .LVU14
 224:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  79              		.loc 1 224 3 view .LVU15
  80              	.LBB4:
  81              		.loc 1 224 3 view .LVU16
  82              		.loc 1 224 3 view .LVU17
  83 0030 D96A     		ldr	r1, [r3, #44]
  84 0032 0222     		movs	r2, #2
  85 0034 1143     		orrs	r1, r2
  86 0036 D962     		str	r1, [r3, #44]
  87              		.loc 1 224 3 view .LVU18
  88 0038 DB6A     		ldr	r3, [r3, #44]
  89 003a 1A40     		ands	r2, r3
  90 003c 0292     		str	r2, [sp, #8]
  91              		.loc 1 224 3 view .LVU19
  92 003e 029B     		ldr	r3, [sp, #8]
  93              	.LBE4:
  94              		.loc 1 224 3 view .LVU20
 225:Src/main.c    **** 
 226:Src/main.c    ****   /*Configure GPIO pin Output Level */
 227:Src/main.c    ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
  95              		.loc 1 227 3 view .LVU21
  96 0040 094D     		ldr	r5, .L2+4
  97 0042 0022     		movs	r2, #0
  98 0044 0821     		movs	r1, #8
  99 0046 2800     		movs	r0, r5
 100 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL1:
 228:Src/main.c    **** 
 229:Src/main.c    ****   /*Configure GPIO pin : LD3_Pin */
 230:Src/main.c    ****   GPIO_InitStruct.Pin = LD3_Pin;
 102              		.loc 1 230 3 view .LVU22
 103              		.loc 1 230 23 is_stmt 0 view .LVU23
 104 004c 0823     		movs	r3, #8
 105 004e 0393     		str	r3, [sp, #12]
 231:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 106              		.loc 1 231 3 is_stmt 1 view .LVU24
 107              		.loc 1 231 24 is_stmt 0 view .LVU25
 108 0050 0494     		str	r4, [sp, #16]
 232:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 109              		.loc 1 232 3 is_stmt 1 view .LVU26
 110              		.loc 1 232 24 is_stmt 0 view .LVU27
 111 0052 0023     		movs	r3, #0
ARM GAS  /tmp/ccd1KPBn.s 			page 7


 112 0054 0593     		str	r3, [sp, #20]
 233:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 113              		.loc 1 233 3 is_stmt 1 view .LVU28
 114              		.loc 1 233 25 is_stmt 0 view .LVU29
 115 0056 0693     		str	r3, [sp, #24]
 234:Src/main.c    ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 116              		.loc 1 234 3 is_stmt 1 view .LVU30
 117 0058 03A9     		add	r1, sp, #12
 118 005a 2800     		movs	r0, r5
 119 005c FFF7FEFF 		bl	HAL_GPIO_Init
 120              	.LVL2:
 235:Src/main.c    **** 
 236:Src/main.c    **** }
 121              		.loc 1 236 1 is_stmt 0 view .LVU31
 122 0060 09B0     		add	sp, sp, #36
 123              		@ sp needed
 124 0062 30BD     		pop	{r4, r5, pc}
 125              	.L3:
 126              		.align	2
 127              	.L2:
 128 0064 00100240 		.word	1073876992
 129 0068 00040050 		.word	1342178304
 130              		.cfi_endproc
 131              	.LFE41:
 133              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 134              		.align	1
 135              		.syntax unified
 136              		.code	16
 137              		.thumb_func
 138              		.fpu softvfp
 140              	MX_USART2_UART_Init:
 141              	.LFB40:
 183:Src/main.c    **** 
 142              		.loc 1 183 1 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 10B5     		push	{r4, lr}
 147              	.LCFI2:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
 192:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 151              		.loc 1 192 3 view .LVU33
 192:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 152              		.loc 1 192 19 is_stmt 0 view .LVU34
 153 0002 0948     		ldr	r0, .L5
 154 0004 094B     		ldr	r3, .L5+4
 155 0006 0360     		str	r3, [r0]
 193:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 156              		.loc 1 193 3 is_stmt 1 view .LVU35
 193:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 157              		.loc 1 193 24 is_stmt 0 view .LVU36
 158 0008 E123     		movs	r3, #225
 159 000a 5B02     		lsls	r3, r3, #9
 160 000c 4360     		str	r3, [r0, #4]
 194:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
ARM GAS  /tmp/ccd1KPBn.s 			page 8


 161              		.loc 1 194 3 is_stmt 1 view .LVU37
 194:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 162              		.loc 1 194 26 is_stmt 0 view .LVU38
 163 000e 0023     		movs	r3, #0
 164 0010 8360     		str	r3, [r0, #8]
 195:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 165              		.loc 1 195 3 is_stmt 1 view .LVU39
 195:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 166              		.loc 1 195 24 is_stmt 0 view .LVU40
 167 0012 C360     		str	r3, [r0, #12]
 196:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 168              		.loc 1 196 3 is_stmt 1 view .LVU41
 196:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 169              		.loc 1 196 22 is_stmt 0 view .LVU42
 170 0014 0361     		str	r3, [r0, #16]
 197:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 171              		.loc 1 197 3 is_stmt 1 view .LVU43
 197:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 172              		.loc 1 197 20 is_stmt 0 view .LVU44
 173 0016 0C22     		movs	r2, #12
 174 0018 4261     		str	r2, [r0, #20]
 198:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 175              		.loc 1 198 3 is_stmt 1 view .LVU45
 198:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 176              		.loc 1 198 25 is_stmt 0 view .LVU46
 177 001a 8361     		str	r3, [r0, #24]
 199:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 178              		.loc 1 199 3 is_stmt 1 view .LVU47
 199:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 179              		.loc 1 199 28 is_stmt 0 view .LVU48
 180 001c C361     		str	r3, [r0, #28]
 200:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 181              		.loc 1 200 3 is_stmt 1 view .LVU49
 200:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 182              		.loc 1 200 30 is_stmt 0 view .LVU50
 183 001e 0362     		str	r3, [r0, #32]
 201:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 184              		.loc 1 201 3 is_stmt 1 view .LVU51
 201:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 185              		.loc 1 201 38 is_stmt 0 view .LVU52
 186 0020 4362     		str	r3, [r0, #36]
 202:Src/main.c    ****   {
 187              		.loc 1 202 3 is_stmt 1 view .LVU53
 202:Src/main.c    ****   {
 188              		.loc 1 202 7 is_stmt 0 view .LVU54
 189 0022 FFF7FEFF 		bl	HAL_UART_Init
 190              	.LVL3:
 210:Src/main.c    **** 
 191              		.loc 1 210 1 view .LVU55
 192              		@ sp needed
 193 0026 10BD     		pop	{r4, pc}
 194              	.L6:
 195              		.align	2
 196              	.L5:
 197 0028 00000000 		.word	huart2
 198 002c 00440040 		.word	1073759232
 199              		.cfi_endproc
ARM GAS  /tmp/ccd1KPBn.s 			page 9


 200              	.LFE40:
 202              		.section	.text.sum,"ax",%progbits
 203              		.align	1
 204              		.global	sum
 205              		.syntax unified
 206              		.code	16
 207              		.thumb_func
 208              		.fpu softvfp
 210              	sum:
 211              	.LVL4:
 212              	.LFB37:
  63:Src/main.c    ****   if (list_size == 0)
 213              		.loc 1 63 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
  63:Src/main.c    ****   if (list_size == 0)
 217              		.loc 1 63 1 is_stmt 0 view .LVU57
 218 0000 10B5     		push	{r4, lr}
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 4, -8
 222              		.cfi_offset 14, -4
  64:Src/main.c    ****     {
 223              		.loc 1 64 3 is_stmt 1 view .LVU58
  64:Src/main.c    ****     {
 224              		.loc 1 64 6 is_stmt 0 view .LVU59
 225 0002 0029     		cmp	r1, #0
 226 0004 09D0     		beq	.L10
  69:Src/main.c    ****     {
 227              		.loc 1 69 3 is_stmt 1 view .LVU60
  69:Src/main.c    ****     {
 228              		.loc 1 69 6 is_stmt 0 view .LVU61
 229 0006 0129     		cmp	r1, #1
 230 0008 05D0     		beq	.L11
  74:Src/main.c    **** }
 231              		.loc 1 74 3 is_stmt 1 view .LVU62
  74:Src/main.c    **** }
 232              		.loc 1 74 15 is_stmt 0 view .LVU63
 233 000a 10C8     		ldmia	r0!, {r4}
 234              	.LVL5:
  74:Src/main.c    **** }
 235              		.loc 1 74 21 view .LVU64
 236 000c 0139     		subs	r1, r1, #1
 237              	.LVL6:
  74:Src/main.c    **** }
 238              		.loc 1 74 21 view .LVU65
 239 000e FFF7FEFF 		bl	sum
 240              	.LVL7:
  74:Src/main.c    **** }
 241              		.loc 1 74 19 view .LVU66
 242 0012 2018     		adds	r0, r4, r0
 243              	.L7:
  75:Src/main.c    **** /* USER CODE END 0 */
 244              		.loc 1 75 1 view .LVU67
 245              		@ sp needed
 246 0014 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccd1KPBn.s 			page 10


 247              	.LVL8:
 248              	.L11:
  71:Src/main.c    ****     }
 249              		.loc 1 71 7 is_stmt 1 view .LVU68
  71:Src/main.c    ****     }
 250              		.loc 1 71 18 is_stmt 0 view .LVU69
 251 0016 0068     		ldr	r0, [r0]
 252              	.LVL9:
  71:Src/main.c    ****     }
 253              		.loc 1 71 18 view .LVU70
 254 0018 FCE7     		b	.L7
 255              	.LVL10:
 256              	.L10:
  66:Src/main.c    ****     }
 257              		.loc 1 66 14 view .LVU71
 258 001a 0800     		movs	r0, r1
 259              	.LVL11:
  66:Src/main.c    ****     }
 260              		.loc 1 66 14 view .LVU72
 261 001c FAE7     		b	.L7
 262              		.cfi_endproc
 263              	.LFE37:
 265              		.section	.text.SystemClock_Config,"ax",%progbits
 266              		.align	1
 267              		.global	SystemClock_Config
 268              		.syntax unified
 269              		.code	16
 270              		.thumb_func
 271              		.fpu softvfp
 273              	SystemClock_Config:
 274              	.LFB39:
 135:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 275              		.loc 1 135 1 is_stmt 1 view -0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 96
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279 0000 30B5     		push	{r4, r5, lr}
 280              	.LCFI4:
 281              		.cfi_def_cfa_offset 12
 282              		.cfi_offset 4, -12
 283              		.cfi_offset 5, -8
 284              		.cfi_offset 14, -4
 285 0002 99B0     		sub	sp, sp, #100
 286              	.LCFI5:
 287              		.cfi_def_cfa_offset 112
 136:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 288              		.loc 1 136 3 view .LVU74
 136:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 289              		.loc 1 136 22 is_stmt 0 view .LVU75
 290 0004 3422     		movs	r2, #52
 291 0006 0021     		movs	r1, #0
 292 0008 0BA8     		add	r0, sp, #44
 293 000a FFF7FEFF 		bl	memset
 294              	.LVL12:
 137:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 295              		.loc 1 137 3 is_stmt 1 view .LVU76
 137:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
ARM GAS  /tmp/ccd1KPBn.s 			page 11


 296              		.loc 1 137 22 is_stmt 0 view .LVU77
 297 000e 1422     		movs	r2, #20
 298 0010 0021     		movs	r1, #0
 299 0012 06A8     		add	r0, sp, #24
 300 0014 FFF7FEFF 		bl	memset
 301              	.LVL13:
 138:Src/main.c    **** 
 302              		.loc 1 138 3 is_stmt 1 view .LVU78
 138:Src/main.c    **** 
 303              		.loc 1 138 28 is_stmt 0 view .LVU79
 304 0018 1822     		movs	r2, #24
 305 001a 0021     		movs	r1, #0
 306 001c 6846     		mov	r0, sp
 307 001e FFF7FEFF 		bl	memset
 308              	.LVL14:
 142:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 309              		.loc 1 142 3 is_stmt 1 view .LVU80
 310 0022 1649     		ldr	r1, .L13
 311 0024 0B68     		ldr	r3, [r1]
 312 0026 164A     		ldr	r2, .L13+4
 313 0028 1A40     		ands	r2, r3
 314 002a 8023     		movs	r3, #128
 315 002c 1B01     		lsls	r3, r3, #4
 316 002e 1343     		orrs	r3, r2
 317 0030 0B60     		str	r3, [r1]
 145:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 318              		.loc 1 145 3 view .LVU81
 145:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 319              		.loc 1 145 36 is_stmt 0 view .LVU82
 320 0032 0225     		movs	r5, #2
 321 0034 0B95     		str	r5, [sp, #44]
 146:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 322              		.loc 1 146 3 is_stmt 1 view .LVU83
 146:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 323              		.loc 1 146 30 is_stmt 0 view .LVU84
 324 0036 0123     		movs	r3, #1
 325 0038 0E93     		str	r3, [sp, #56]
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 326              		.loc 1 147 3 is_stmt 1 view .LVU85
 147:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 327              		.loc 1 147 41 is_stmt 0 view .LVU86
 328 003a 0F33     		adds	r3, r3, #15
 329 003c 0F93     		str	r3, [sp, #60]
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 330              		.loc 1 148 3 is_stmt 1 view .LVU87
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 331              		.loc 1 148 34 is_stmt 0 view .LVU88
 332 003e 1495     		str	r5, [sp, #80]
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 333              		.loc 1 149 3 is_stmt 1 view .LVU89
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 334              		.loc 1 149 35 is_stmt 0 view .LVU90
 335 0040 0024     		movs	r4, #0
 336 0042 1594     		str	r4, [sp, #84]
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 337              		.loc 1 150 3 is_stmt 1 view .LVU91
 150:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
ARM GAS  /tmp/ccd1KPBn.s 			page 12


 338              		.loc 1 150 32 is_stmt 0 view .LVU92
 339 0044 8023     		movs	r3, #128
 340 0046 DB02     		lsls	r3, r3, #11
 341 0048 1693     		str	r3, [sp, #88]
 151:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 342              		.loc 1 151 3 is_stmt 1 view .LVU93
 151:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 343              		.loc 1 151 32 is_stmt 0 view .LVU94
 344 004a 8023     		movs	r3, #128
 345 004c DB03     		lsls	r3, r3, #15
 346 004e 1793     		str	r3, [sp, #92]
 152:Src/main.c    ****   {
 347              		.loc 1 152 3 is_stmt 1 view .LVU95
 152:Src/main.c    ****   {
 348              		.loc 1 152 7 is_stmt 0 view .LVU96
 349 0050 0BA8     		add	r0, sp, #44
 350 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 351              	.LVL15:
 158:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 352              		.loc 1 158 3 is_stmt 1 view .LVU97
 158:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 353              		.loc 1 158 31 is_stmt 0 view .LVU98
 354 0056 0F23     		movs	r3, #15
 355 0058 0693     		str	r3, [sp, #24]
 160:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 356              		.loc 1 160 3 is_stmt 1 view .LVU99
 160:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 357              		.loc 1 160 34 is_stmt 0 view .LVU100
 358 005a 0C3B     		subs	r3, r3, #12
 359 005c 0793     		str	r3, [sp, #28]
 161:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 360              		.loc 1 161 3 is_stmt 1 view .LVU101
 161:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 361              		.loc 1 161 35 is_stmt 0 view .LVU102
 362 005e 0894     		str	r4, [sp, #32]
 162:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 363              		.loc 1 162 3 is_stmt 1 view .LVU103
 162:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 364              		.loc 1 162 36 is_stmt 0 view .LVU104
 365 0060 0994     		str	r4, [sp, #36]
 163:Src/main.c    **** 
 366              		.loc 1 163 3 is_stmt 1 view .LVU105
 163:Src/main.c    **** 
 367              		.loc 1 163 36 is_stmt 0 view .LVU106
 368 0062 0A94     		str	r4, [sp, #40]
 165:Src/main.c    ****   {
 369              		.loc 1 165 3 is_stmt 1 view .LVU107
 165:Src/main.c    ****   {
 370              		.loc 1 165 7 is_stmt 0 view .LVU108
 371 0064 0121     		movs	r1, #1
 372 0066 06A8     		add	r0, sp, #24
 373 0068 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 374              	.LVL16:
 169:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 375              		.loc 1 169 3 is_stmt 1 view .LVU109
 169:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 376              		.loc 1 169 38 is_stmt 0 view .LVU110
ARM GAS  /tmp/ccd1KPBn.s 			page 13


 377 006c 0095     		str	r5, [sp]
 170:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 378              		.loc 1 170 3 is_stmt 1 view .LVU111
 170:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 379              		.loc 1 170 38 is_stmt 0 view .LVU112
 380 006e 0294     		str	r4, [sp, #8]
 171:Src/main.c    ****   {
 381              		.loc 1 171 3 is_stmt 1 view .LVU113
 171:Src/main.c    ****   {
 382              		.loc 1 171 7 is_stmt 0 view .LVU114
 383 0070 6846     		mov	r0, sp
 384 0072 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 385              	.LVL17:
 175:Src/main.c    **** 
 386              		.loc 1 175 1 view .LVU115
 387 0076 19B0     		add	sp, sp, #100
 388              		@ sp needed
 389 0078 30BD     		pop	{r4, r5, pc}
 390              	.L14:
 391 007a C046     		.align	2
 392              	.L13:
 393 007c 00700040 		.word	1073770496
 394 0080 FFE7FFFF 		.word	-6145
 395              		.cfi_endproc
 396              	.LFE39:
 398              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 399              		.align	2
 400              	.LC1:
 401 0000 53756D20 		.ascii	"Sum of list is %i\012\015\000"
 401      6F66206C 
 401      69737420 
 401      69732025 
 401      690A0D00 
 402              		.section	.text.main,"ax",%progbits
 403              		.align	1
 404              		.global	main
 405              		.syntax unified
 406              		.code	16
 407              		.thumb_func
 408              		.fpu softvfp
 410              	main:
 411              	.LFB38:
  83:Src/main.c    ****   /* USER CODE BEGIN 1 */
 412              		.loc 1 83 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 4064
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 10B5     		push	{r4, lr}
 417              	.LCFI6:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 4, -8
 420              		.cfi_offset 14, -4
 421 0002 184C     		ldr	r4, .L19
 422 0004 A544     		add	sp, sp, r4
 423              	.LCFI7:
 424              		.cfi_def_cfa_offset 4072
  91:Src/main.c    **** 
ARM GAS  /tmp/ccd1KPBn.s 			page 14


 425              		.loc 1 91 3 view .LVU117
 426 0006 FFF7FEFF 		bl	HAL_Init
 427              	.LVL18:
  98:Src/main.c    **** 
 428              		.loc 1 98 3 view .LVU118
 429 000a FFF7FEFF 		bl	SystemClock_Config
 430              	.LVL19:
 105:Src/main.c    ****   MX_USART2_UART_Init();
 431              		.loc 1 105 3 view .LVU119
 432 000e FFF7FEFF 		bl	MX_GPIO_Init
 433              	.LVL20:
 106:Src/main.c    ****   /* USER CODE BEGIN 2 */
 434              		.loc 1 106 3 view .LVU120
 435 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 436              	.LVL21:
 108:Src/main.c    ****   int list[1000];
 437              		.loc 1 108 3 view .LVU121
 109:Src/main.c    ****   for (int i = 0; i < 1000; i++)
 438              		.loc 1 109 3 view .LVU122
 110:Src/main.c    ****     {
 439              		.loc 1 110 3 view .LVU123
 440              	.LBB5:
 110:Src/main.c    ****     {
 441              		.loc 1 110 8 view .LVU124
 110:Src/main.c    ****     {
 442              		.loc 1 110 12 is_stmt 0 view .LVU125
 443 0016 0023     		movs	r3, #0
 110:Src/main.c    ****     {
 444              		.loc 1 110 3 view .LVU126
 445 0018 03E0     		b	.L16
 446              	.LVL22:
 447              	.L17:
 112:Src/main.c    ****     }
 448              		.loc 1 112 7 is_stmt 1 discriminator 3 view .LVU127
 112:Src/main.c    ****     }
 449              		.loc 1 112 15 is_stmt 0 discriminator 3 view .LVU128
 450 001a 9A00     		lsls	r2, r3, #2
 451 001c 6946     		mov	r1, sp
 452 001e 5350     		str	r3, [r2, r1]
 110:Src/main.c    ****     {
 453              		.loc 1 110 29 is_stmt 1 discriminator 3 view .LVU129
 110:Src/main.c    ****     {
 454              		.loc 1 110 30 is_stmt 0 discriminator 3 view .LVU130
 455 0020 0133     		adds	r3, r3, #1
 456              	.LVL23:
 457              	.L16:
 110:Src/main.c    ****     {
 458              		.loc 1 110 19 is_stmt 1 discriminator 1 view .LVU131
 110:Src/main.c    ****     {
 459              		.loc 1 110 3 is_stmt 0 discriminator 1 view .LVU132
 460 0022 FA22     		movs	r2, #250
 461 0024 9200     		lsls	r2, r2, #2
 462 0026 9342     		cmp	r3, r2
 463 0028 F7DB     		blt	.L17
 464              	.LBE5:
 114:Src/main.c    ****   HAL_UART_Transmit(&huart2, buffer, strlen((const char*)buffer), 1000);
 465              		.loc 1 114 3 is_stmt 1 view .LVU133
ARM GAS  /tmp/ccd1KPBn.s 			page 15


 466 002a 1400     		movs	r4, r2
 467 002c 1100     		movs	r1, r2
 468 002e 6846     		mov	r0, sp
 469 0030 FFF7FEFF 		bl	sum
 470              	.LVL24:
 114:Src/main.c    ****   HAL_UART_Transmit(&huart2, buffer, strlen((const char*)buffer), 1000);
 471              		.loc 1 114 3 is_stmt 0 view .LVU134
 472 0034 0200     		movs	r2, r0
 473 0036 0C49     		ldr	r1, .L19+4
 474 0038 FA23     		movs	r3, #250
 475 003a 1B01     		lsls	r3, r3, #4
 476 003c 6B44     		add	r3, r3, sp
 477 003e 1800     		movs	r0, r3
 478 0040 FFF7FEFF 		bl	sprintf
 479              	.LVL25:
 115:Src/main.c    **** 
 480              		.loc 1 115 3 is_stmt 1 view .LVU135
 115:Src/main.c    **** 
 481              		.loc 1 115 38 is_stmt 0 view .LVU136
 482 0044 FA23     		movs	r3, #250
 483 0046 1B01     		lsls	r3, r3, #4
 484 0048 6B44     		add	r3, r3, sp
 485 004a 1800     		movs	r0, r3
 486 004c FFF7FEFF 		bl	strlen
 487              	.LVL26:
 115:Src/main.c    **** 
 488              		.loc 1 115 3 view .LVU137
 489 0050 82B2     		uxth	r2, r0
 490 0052 2300     		movs	r3, r4
 491 0054 FA21     		movs	r1, #250
 492 0056 0901     		lsls	r1, r1, #4
 493 0058 6944     		add	r1, r1, sp
 494 005a 0448     		ldr	r0, .L19+8
 495 005c FFF7FEFF 		bl	HAL_UART_Transmit
 496              	.LVL27:
 497              	.L18:
 121:Src/main.c    ****   {
 498              		.loc 1 121 3 is_stmt 1 discriminator 1 view .LVU138
 126:Src/main.c    ****   /* USER CODE END 3 */
 499              		.loc 1 126 3 discriminator 1 view .LVU139
 121:Src/main.c    ****   {
 500              		.loc 1 121 9 discriminator 1 view .LVU140
 501 0060 FEE7     		b	.L18
 502              	.L20:
 503 0062 C046     		.align	2
 504              	.L19:
 505 0064 20F0FFFF 		.word	-4064
 506 0068 00000000 		.word	.LC1
 507 006c 00000000 		.word	huart2
 508              		.cfi_endproc
 509              	.LFE38:
 511              		.section	.text.Error_Handler,"ax",%progbits
 512              		.align	1
 513              		.global	Error_Handler
 514              		.syntax unified
 515              		.code	16
 516              		.thumb_func
ARM GAS  /tmp/ccd1KPBn.s 			page 16


 517              		.fpu softvfp
 519              	Error_Handler:
 520              	.LFB42:
 237:Src/main.c    **** 
 238:Src/main.c    **** /* USER CODE BEGIN 4 */
 239:Src/main.c    **** 
 240:Src/main.c    **** /* USER CODE END 4 */
 241:Src/main.c    **** 
 242:Src/main.c    **** /**
 243:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 244:Src/main.c    ****   * @retval None
 245:Src/main.c    ****   */
 246:Src/main.c    **** void Error_Handler(void)
 247:Src/main.c    **** {
 521              		.loc 1 247 1 view -0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 0
 524              		@ frame_needed = 0, uses_anonymous_args = 0
 525              		@ link register save eliminated.
 248:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 249:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 250:Src/main.c    **** 
 251:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 252:Src/main.c    **** }
 526              		.loc 1 252 1 view .LVU142
 527              		@ sp needed
 528 0000 7047     		bx	lr
 529              		.cfi_endproc
 530              	.LFE42:
 532              		.global	huart2
 533              		.section	.bss.huart2,"aw",%nobits
 534              		.align	2
 537              	huart2:
 538 0000 00000000 		.space	128
 538      00000000 
 538      00000000 
 538      00000000 
 538      00000000 
 539              		.text
 540              	.Letext0:
 541              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 542              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 543              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l031xx.h"
 544              		.file 5 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 545              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 546              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 547              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 548              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 549              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 550              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 551              		.file 12 "/usr/arm-none-eabi/include/stdio.h"
 552              		.file 13 "/usr/arm-none-eabi/include/string.h"
 553              		.file 14 "<built-in>"
ARM GAS  /tmp/ccd1KPBn.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccd1KPBn.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccd1KPBn.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccd1KPBn.s:128    .text.MX_GPIO_Init:0000000000000064 $d
     /tmp/ccd1KPBn.s:134    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccd1KPBn.s:140    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccd1KPBn.s:197    .text.MX_USART2_UART_Init:0000000000000028 $d
     /tmp/ccd1KPBn.s:537    .bss.huart2:0000000000000000 huart2
     /tmp/ccd1KPBn.s:203    .text.sum:0000000000000000 $t
     /tmp/ccd1KPBn.s:210    .text.sum:0000000000000000 sum
     /tmp/ccd1KPBn.s:266    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccd1KPBn.s:273    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccd1KPBn.s:393    .text.SystemClock_Config:000000000000007c $d
     /tmp/ccd1KPBn.s:399    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccd1KPBn.s:403    .text.main:0000000000000000 $t
     /tmp/ccd1KPBn.s:410    .text.main:0000000000000000 main
     /tmp/ccd1KPBn.s:505    .text.main:0000000000000064 $d
     /tmp/ccd1KPBn.s:512    .text.Error_Handler:0000000000000000 $t
     /tmp/ccd1KPBn.s:519    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccd1KPBn.s:534    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
sprintf
strlen
HAL_UART_Transmit
