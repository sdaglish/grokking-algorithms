#include "catch2/catch.hpp"

extern "C"{
  #include "queue.h"
}


TEST_CASE("Queue is empty when it is first created", "[queue]")
{
  REQUIRE(size() == 0);
}

TEST_CASE("Queue can be pushed and pulled", "[queue]")
{
  REQUIRE(size() == 0);
  
  SECTION("adding an element increases the size of the queue")
    {
      insert(3);
      REQUIRE(size() == 2);
    }
}


// Compile & run:
// - g++ -std=c++11 -Wall -I$(CATCH_SINGLE_INCLUDE) -o 010-TestCase 010-TestCase.cpp && 010-TestCase --success
// - cl -EHsc -I%CATCH_SINGLE_INCLUDE% 010-TestCase.cpp && 010-TestCase --success

// Expected compact output (all assertions):
//
// prompt> 010-TestCase --reporter compact --success
// 010-TestCase.cpp:14: failgged: Factorial(0) == 1 for: 0 == 1
// 010-TestCase.cpp:18: passed: Factorial(1) == 1 for: 1 == 1
// 010-TestCase.cpp:19: passed: Factorial(2) == 2 for: 2 == 2
// 010-TestCase.cpp:20: passed: Factorial(3) == 6 for: 6 == 6
// 010-TestCase.cpp:21: passed: Factorial(10) == 3628800 for: 3628800 (0x375f00)
// == 3628800 (0x375f00) Failed 1 test case, failed 1 assertion.;:w
